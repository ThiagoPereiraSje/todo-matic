{"version":3,"sources":["hooks/usePrevious.js","components/FilterButton.js","components/Form.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","labels","All","Active","Completed","FilterButton","name","isPressed","setFilter","type","className","onClick","Form","addTask","useState","setName","onSubmit","e","preventDefault","htmlFor","id","autoComplete","onChange","target","Todo","completed","toggleTaskCompleted","editTask","deleteTask","editFieldRef","editButtonRef","isEditing","setEditing","newName","setNewName","wasEditing","focus","editingTemplate","viewTemplate","defaultChecked","FILTER_MAP","task","FILTER_NAMES","Object","keys","App","props","listHeadingRef","tasks","setTasks","filter","prevTaskLength","length","updatedTasks","map","edited","remaining","taskList","t","filterList","tasksNoun","headingText","newTask","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50b978b3.chunk.js","sourcesContent":["import { useRef, useEffect } from \"react\";\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n","const labels = {\n  All: \"Todas\",\n  Active: \"Ativas\",\n  Completed: \"Conclu√≠das\",\n};\n\nexport default function FilterButton({\n  name,\n  isPressed,\n  setFilter,\n}) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={isPressed}\n      onClick={() => setFilter(name)}>\n      <span className=\"visually-hidden\">Mostar </span>\n      <span>{labels[name]}</span>\n      <span className=\"visually-hidden\"> tarefas</span>\n    </button>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function Form({ addTask }) {\n  const [name, setName] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name) {\n      return;\n    }\n\n    addTask(name);\n    setName(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label\n          htmlFor=\"new-todo-input\"\n          className=\"label__lg\">\n          O que precisa ser feito?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <button\n        type=\"submit\"\n        className=\"btn btn__primary btn__lg\">\n        Adicionar\n      </button>\n    </form>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport usePrevious from \"../hooks/usePrevious\";\n\nexport default function Todo({\n  name,\n  completed = false,\n  id,\n  toggleTaskCompleted,\n  editTask,\n  deleteTask,\n}) {\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const wasEditing = usePrevious(isEditing);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    editTask(id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  };\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={id}>\n          Novo nome para {name}\n        </label>\n        <input\n          id={id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={(e) => setNewName(e.target.value)}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}>\n          Cancelar\n          <span className=\"visually-hidden\">\n            renomeando {name}\n          </span>\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn__primary todo-edit\">\n          Salvar\n          <span className=\"visually-hidden\">\n            Novo nome para {name}\n          </span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={id}\n          type=\"checkbox\"\n          defaultChecked={completed}\n          onChange={() => toggleTaskCompleted(id)}\n        />\n        <label className=\"todo-label\" htmlFor={id}>\n          {name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}>\n          Editar{\" \"}\n          <span className=\"visually-hidden\">{name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => deleteTask(id)}>\n          Excluir{\" \"}\n          <span className=\"visually-hidden\">{name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <li className=\"todo\">\n      {isEditing ? editingTemplate : viewTemplate}\n    </li>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport usePrevious from \"./hooks/usePrevious\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport Todo from \"./components/Todo\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const listHeadingRef = useRef(null);\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  const addTask = (name) => {\n    const newTask = {\n      id: tasks.length + 1,\n      name,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const toggleTaskCompleted = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n\n      return task;\n    });\n\n    setTasks(updatedTasks);\n  };\n\n  const editTask = (id, newName) => {\n    const edited = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n\n      return task;\n    });\n\n    setTasks(edited);\n  };\n\n  const deleteTask = (id) => {\n    const remaining = tasks.filter(\n      (task) => id !== task.id\n    );\n    setTasks(remaining);\n  };\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((t) => (\n      <Todo\n        key={t.id}\n        id={t.id}\n        name={t.name}\n        completed={t.completed}\n        toggleTaskCompleted={toggleTaskCompleted}\n        editTask={editTask}\n        deleteTask={deleteTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = tasks.length > 1 ? \"Tarefas\" : \"Tarefa\";\n  const headingText = `${tasks.length} ${tasksNoun} restante(s)`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2\n        id=\"list-heading\"\n        tabIndex=\"-1\"\n        ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst DATA = [\n  { id: 1, name: \"Comer\", completed: true },\n  { id: 2, name: \"Dormir\", completed: false },\n  { id: 3, name: \"Repetir\", completed: false },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}